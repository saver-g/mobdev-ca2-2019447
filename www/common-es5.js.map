{"version":3,"sources":["node_modules/@ionic/core/dist/esm/framework-delegate-d1eb6504.js","node_modules/@ionic/core/dist/esm/haptic-ccbda579.js","node_modules/@ionic/core/dist/esm/index-729ec402.js","node_modules/@ionic/core/dist/esm/spinner-configs-c78e170e.js","node_modules/@ionic/core/dist/esm/theme-c2dc54d9.js","src/app/pipes/deathfilter.pipe.ts","src/app/pipes/pipes.module.ts","src/app/pipes/quotefilter.pipe.ts","src/app/services/api.service.ts","src/app/services/favourite.service.ts"],"names":[],"mappings":"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","sourcesContent":["const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n    if (delegate) {\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n    }\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n        throw new Error('framework delegate is missing');\n    }\n    const el = (typeof component === 'string')\n        ? container.ownerDocument && container.ownerDocument.createElement(component)\n        : component;\n    if (cssClasses) {\n        cssClasses.forEach(c => el.classList.add(c));\n    }\n    if (componentProps) {\n        Object.assign(el, componentProps);\n    }\n    container.appendChild(el);\n    if (el.componentOnReady) {\n        await el.componentOnReady();\n    }\n    return el;\n};\nconst detachComponent = (delegate, element) => {\n    if (element) {\n        if (delegate) {\n            const container = element.parentElement;\n            return delegate.removeViewFromDom(container, element);\n        }\n        element.remove();\n    }\n    return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","/**\n * Check to see if the Haptic Plugin is available\n * @return Returns `true` or false if the plugin is available\n */\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n    const engine = window.TapticEngine;\n    if (engine) {\n        engine.selection();\n    }\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n    const engine = window.TapticEngine;\n    if (engine) {\n        engine.gestureSelectionStart();\n    }\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n    const engine = window.TapticEngine;\n    if (engine) {\n        engine.gestureSelectionChanged();\n    }\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n    const engine = window.TapticEngine;\n    if (engine) {\n        engine.gestureSelectionEnd();\n    }\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelectionEnd as c, hapticSelection as h };\n","/**\n * Does a simple sanitization of all elements\n * in an untrusted string\n */\nconst sanitizeDOMString = (untrustedString) => {\n    try {\n        if (typeof untrustedString !== 'string' || untrustedString === '') {\n            return untrustedString;\n        }\n        /**\n         * Create a document fragment\n         * separate from the main DOM,\n         * create a div to do our work in\n         */\n        const documentFragment = document.createDocumentFragment();\n        const workingDiv = document.createElement('div');\n        documentFragment.appendChild(workingDiv);\n        workingDiv.innerHTML = untrustedString;\n        /**\n         * Remove any elements\n         * that are blocked\n         */\n        blockedTags.forEach(blockedTag => {\n            const getElementsToRemove = documentFragment.querySelectorAll(blockedTag);\n            for (let elementIndex = getElementsToRemove.length - 1; elementIndex >= 0; elementIndex--) {\n                const element = getElementsToRemove[elementIndex];\n                if (element.parentNode) {\n                    element.parentNode.removeChild(element);\n                }\n                else {\n                    documentFragment.removeChild(element);\n                }\n                /**\n                 * We still need to sanitize\n                 * the children of this element\n                 * as they are left behind\n                 */\n                const childElements = getElementChildren(element);\n                /* tslint:disable-next-line */\n                for (let childIndex = 0; childIndex < childElements.length; childIndex++) {\n                    sanitizeElement(childElements[childIndex]);\n                }\n            }\n        });\n        /**\n         * Go through remaining elements and remove\n         * non-allowed attribs\n         */\n        // IE does not support .children on document fragments, only .childNodes\n        const dfChildren = getElementChildren(documentFragment);\n        /* tslint:disable-next-line */\n        for (let childIndex = 0; childIndex < dfChildren.length; childIndex++) {\n            sanitizeElement(dfChildren[childIndex]);\n        }\n        // Append document fragment to div\n        const fragmentDiv = document.createElement('div');\n        fragmentDiv.appendChild(documentFragment);\n        // First child is always the div we did our work in\n        const getInnerDiv = fragmentDiv.querySelector('div');\n        return (getInnerDiv !== null) ? getInnerDiv.innerHTML : fragmentDiv.innerHTML;\n    }\n    catch (err) {\n        console.error(err);\n        return '';\n    }\n};\n/**\n * Clean up current element based on allowed attributes\n * and then recursively dig down into any child elements to\n * clean those up as well\n */\nconst sanitizeElement = (element) => {\n    // IE uses childNodes, so ignore nodes that are not elements\n    if (element.nodeType && element.nodeType !== 1) {\n        return;\n    }\n    for (let i = element.attributes.length - 1; i >= 0; i--) {\n        const attribute = element.attributes.item(i);\n        const attributeName = attribute.name;\n        // remove non-allowed attribs\n        if (!allowedAttributes.includes(attributeName.toLowerCase())) {\n            element.removeAttribute(attributeName);\n            continue;\n        }\n        // clean up any allowed attribs\n        // that attempt to do any JS funny-business\n        const attributeValue = attribute.value;\n        /* tslint:disable-next-line */\n        if (attributeValue != null && attributeValue.toLowerCase().includes('javascript:')) {\n            element.removeAttribute(attributeName);\n        }\n    }\n    /**\n     * Sanitize any nested children\n     */\n    const childElements = getElementChildren(element);\n    /* tslint:disable-next-line */\n    for (let i = 0; i < childElements.length; i++) {\n        sanitizeElement(childElements[i]);\n    }\n};\n/**\n * IE doesn't always support .children\n * so we revert to .childNodes instead\n */\nconst getElementChildren = (el) => {\n    return (el.children != null) ? el.children : el.childNodes;\n};\nconst allowedAttributes = ['class', 'id', 'href', 'src', 'name', 'slot'];\nconst blockedTags = ['script', 'style', 'iframe', 'meta', 'link', 'object', 'embed'];\n\nexport { sanitizeDOMString as s };\n","const spinners = {\n    'bubbles': {\n        dur: 1000,\n        circles: 9,\n        fn: (dur, index, total) => {\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            const angle = 2 * Math.PI * index / total;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circles': {\n        dur: 1000,\n        circles: 8,\n        fn: (dur, index, total) => {\n            const step = index / total;\n            const animationDelay = `${(dur * step) - dur}ms`;\n            const angle = 2 * Math.PI * step;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circular': {\n        dur: 1400,\n        elmDuration: true,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 20,\n                cx: 48,\n                cy: 48,\n                fill: 'none',\n                viewBox: '24 24 48 48',\n                transform: 'translate(0,0)',\n                style: {}\n            };\n        }\n    },\n    'crescent': {\n        dur: 750,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 26,\n                style: {}\n            };\n        }\n    },\n    'dots': {\n        dur: 750,\n        circles: 3,\n        fn: (_, index) => {\n            const animationDelay = -(110 * index) + 'ms';\n            return {\n                r: 6,\n                style: {\n                    'left': `${9 - (9 * index)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 17,\n                y2: 29,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines-small': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 12,\n                y2: 20,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color) => {\n    return (typeof color === 'string' && color.length > 0) ? {\n        'ion-color': true,\n        [`ion-color-${color}`]: true\n    } : undefined;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(c => c != null)\n            .map(c => c.trim())\n            .filter(c => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach(c => map[c] = true);\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","// Source: https://codeburst.io/create-a-search-pipe-to-dynamically-filter-results-with-angular-4-21fd3a5bec5c\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'deathfilter'\n})\n\nexport class DeathfilterPipe implements PipeTransform {\n\n    transform(deaths: any[], keyword: string): any[] {\n\n        // If no keyword is entered in searchbar, returns all deaths\n        if (keyword.length === 0) {\n            return deaths;\n        }\n\n        // Converts entered keyword to lower case\n        keyword = keyword.toLocaleLowerCase();\n\n        // Function to return results based on entered keyword\n        return deaths.filter(death => {\n\n            // Functions to check if entered keyword is a death name, responsible, cause or last words\n            return death.death.toLocaleLowerCase().includes(keyword)\n                || death.responsible.toLocaleLowerCase().includes(keyword)\n                || death.cause.toLocaleLowerCase().includes(keyword)\n                || death.last_words.toLocaleLowerCase().includes(keyword);\n        });\n    }\n}","// Source: https://codeburst.io/create-a-search-pipe-to-dynamically-filter-results-with-angular-4-21fd3a5bec5c\n\nimport { NgModule } from '@angular/core';\nimport { QuotefilterPipe } from './quotefilter.pipe';\nimport { DeathfilterPipe } from './deathfilter.pipe';\n\n@NgModule({\n  declarations: [QuotefilterPipe, DeathfilterPipe],\n  exports: [ QuotefilterPipe, DeathfilterPipe]\n})\n\nexport class PipesModule { }\n","// Source: https://codeburst.io/create-a-search-pipe-to-dynamically-filter-results-with-angular-4-21fd3a5bec5c\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'quotefilter'\n})\n\nexport class QuotefilterPipe implements PipeTransform {\n\n    transform(quotes: any[], keyword: string): any[] {\n\n        // If no keyword is entered in searchbar, returns all quotes\n        if (keyword.length === 0) {\n            return quotes;\n        }\n\n        // Converts entered keyword to lower case\n        keyword = keyword.toLocaleLowerCase();\n\n        // Function to return results based on entered keyword\n        return quotes.filter(quote => {\n\n            // Functions to check if entered keyword is a quote or author\n            return quote.quote.toLocalLowerCase().includes(keyword)\n            || quote.author.toLocalLowerCase().includes(keyword);\n        })\n    }\n}\n","// Source: Mikhail Timofeev --> Mobile Development Slides & Classes\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ApiService {\n\n    // Base URL to be used by all functions\n    baseUrl='https://www.breakingbadapi.com/api'\n\n    constructor(private http: HttpClient) { }\n\n    // Function to retrieve all episodes\n    getEpisodes() {\n        return this.http.get(`${this.baseUrl}/episodes`);\n    }\n\n    // Function to retrieve episodes based on ID\n    getEpisode(id) {\n        return this.http.get(`${this.baseUrl}/episodes/${id}`);\n    }\n\n    // Function to retrieve a limited number of episodes at any one time\n    getCharacters(offset) {\n        return this.http.get(`${this.baseUrl}/characters?offset=${offset}&limit=15`)\n    }\n\n    // Function to retrieve characters based on ID\n    getCharacter(id) {\n        return this.http.get(`${this.baseUrl}/characters/${id}`);\n    }\n\n    // Function to retrieve all quotes\n    getQuotes() {\n        return this.http.get(`${this.baseUrl}/quotes`);\n    }\n\n    // Function to retrieve quotes based on ID\n    getQuote(id) {\n        return this.http.get(`${this.baseUrl}/quotes/${id}`);\n    }\n\n    // Function to retrieve all deaths\n    getDeaths() {\n        return this.http.get(`${this.baseUrl}/deaths`);\n    }\n}","import { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage';\n\nconst STORAGE_KEY_1 = 'favouriteEpisodes';\nconst STORAGE_KEY_2 = 'favouriteCharacters';\nconst STORAGE_KEY_3 = 'favouriteQuotes';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class FavouriteService {\n\n    constructor(private storage: Storage) { }\n\n\n    /* ------------------\n    A. Favourite Episodes\n    -------------------*/\n\n    // Function to retrieve all episodes\n    getAllFavouriteEpisodes() {\n        return this.storage.get(STORAGE_KEY_1);\n    }\n\n    // Function to check whether episode is marked as favourite\n    isFavourite(episodeId) {\n        return this.getAllFavouriteEpisodes().then(result => {\n            return result && result.indexOf(episodeId) !== -1;\n        });\n    }\n\n    // Function to favourite episode\n    favouriteEpisode(episodeId) {\n        return this.getAllFavouriteEpisodes().then(result => {\n            if (result) {\n                result.push(episodeId);\n                return this.storage.set(STORAGE_KEY_1, result);\n            } else {\n                return this.storage.set(STORAGE_KEY_1, [episodeId]);\n            }\n        });\n    }\n\n    // Function to unfavourite episode\n    unfavouriteEpisode(episodeId) {\n        return this.getAllFavouriteEpisodes().then(result => {\n            if (result) {\n                var index = result.indexOf(episodeId);\n                result.splice(index, 1);\n                return this.storage.set(STORAGE_KEY_1, result);\n            }\n        });\n    }\n\n\n    /* --------------------\n    B. Favourite Characters\n    ---------------------*/\n\n    // Function to retrieve all characters\n    getAllFavouriteCharacters() {\n        return this.storage.get(STORAGE_KEY_2);\n    }\n\n    // Function to check whether characters is marked as liked\n    isLiked(characterId) {\n        return this.getAllFavouriteCharacters().then(result => {\n            return result && result.indexOf(characterId) !== -1;\n        });\n    }\n\n    // Function to favourite characters\n    favouriteCharacter(characterId) {\n        return this.getAllFavouriteCharacters().then(result => {\n            if (result) {\n                result.push(characterId);\n                return this.storage.set(STORAGE_KEY_2, result);\n            } else {\n                return this.storage.set(STORAGE_KEY_2, [characterId]);\n            }\n        });\n    }\n\n    // Function to unfavourite characters\n    unfavouriteCharacter(characterId) {\n        return this.getAllFavouriteCharacters().then(result => {\n            if (result) {\n                var index = result.indexOf(characterId);\n                result.splice(index, 1);\n                return this.storage.set(STORAGE_KEY_2, result);\n            }\n        });\n    }\n\n\n    /* ----------------\n    C. Favourite Quotes\n    -----------------*/\n\n    // Function to retrieve all quotes\n    getAllFavouriteQuotes() {\n        return this.storage.get(STORAGE_KEY_3);\n    }\n\n    // Function to check whether quote is marked as favourite\n    isFavourited(quoteId) {\n        return this.getAllFavouriteQuotes().then(result => {\n            return result && result.indexOf(quoteId) !== -1;\n        });\n    }\n\n    // Function to favourite quotes\n    favouriteQuote(quoteId) {\n        return this.getAllFavouriteQuotes().then(result => {\n            if (result) {\n                result.push(quoteId);\n                return this.storage.set(STORAGE_KEY_3, result);\n            } else {\n                return this.storage.set(STORAGE_KEY_3, [quoteId]);\n            }\n        });\n    }\n\n    // Function to unfavourite quotes\n    unfavouriteQuote(quoteId) {\n        return this.getAllFavouriteQuotes().then(result => {\n            if (result) {\n                var index = result.indexOf(quoteId);\n                result.splice(index, 1);\n                return this.storage.set(STORAGE_KEY_3, result);\n            }\n        });\n    }\n}"],"sourceRoot":"webpack:///","file":"common-es5.js"}