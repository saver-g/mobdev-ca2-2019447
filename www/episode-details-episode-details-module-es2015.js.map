{"version":3,"sources":["./src/app/pages/episode-details/episode-details.page.html","./src/app/pages/episode-details/episode-details-routing.module.ts","./src/app/pages/episode-details/episode-details.module.ts","./src/app/pages/episode-details/episode-details.page.scss","./src/app/pages/episode-details/episode-details.page.ts"],"names":[],"mappings":"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","file":"episode-details-episode-details-module-es2015.js","sourcesContent":["export default \"<!--Page Header-->\\n<ion-header>\\n\\t<ion-toolbar color=\\\"primary\\\">\\n\\n\\t\\t<!--Back-Navigation-->\\n\\t\\t<ion-buttons slot=\\\"start\\\">\\n\\t\\t\\t<ion-back-button defaulthref=\\\"/tabs/episodes\\\"></ion-back-button>\\n\\t\\t</ion-buttons>\\n\\n\\t\\t<!--Generating episode's name as title-->\\n\\t\\t<ion-title>{{ episode?.title }}</ion-title>\\n\\n\\t\\t<!--Favourite Episode-->\\n\\t\\t<ion-buttons slot=\\\"end\\\">\\n\\n\\t\\t\\t<!--Function to unfavourite episode if it is favourite and button is clicked-->\\n\\t\\t\\t<ion-button (click)=\\\"unfavouriteEpisode()\\\" *ngIf=\\\"isFavourite\\\">\\n\\t\\t\\t\\t<ion-icon color=\\\"warning\\\" name=\\\"star\\\" slot=\\\"icon-only\\\"></ion-icon>\\n\\t\\t\\t</ion-button>\\n\\n\\t\\t\\t<!--Function to favourite episode if it is unfavourited and button is clicked-->\\n\\t\\t\\t<ion-button (click)=\\\"favouriteEpisode()\\\" *ngIf=\\\"!isFavourite\\\">\\n\\t\\t\\t\\t<ion-icon color=\\\"warning\\\" name=\\\"star-outline\\\" slot=\\\"icon-only\\\"></ion-icon>\\n\\t\\t\\t</ion-button>\\n\\n\\t\\t</ion-buttons>\\n\\t</ion-toolbar>\\n</ion-header>\\n\\n<!--Page Content-->\\n<ion-content>\\n\\t<ion-card *ngIf=\\\"episode\\\">\\n\\n        <!--Card Header-->\\n\\t\\t<ion-card-header>\\n\\t\\t\\t<ion-card-title>Episode Details</ion-card-title>\\n\\t\\t</ion-card-header>\\n\\n\\t\\t<!--Episode's ID-->\\n\\t\\t<ion-item class=\\\"movie-info\\\" lines=\\\"inset\\\">\\n\\t\\t\\t<ion-icon color=\\\"warning\\\" name=\\\"finger-print-outline\\\" slot=\\\"start\\\"></ion-icon>\\n\\t\\t\\tID: {{ episode.episode_id }}\\n\\t\\t</ion-item>\\n\\n\\t\\t<!--Episode's Air Date-->\\n\\t\\t<ion-item class=\\\"movie-info\\\" lines=\\\"inset\\\">\\n\\t\\t\\t<ion-icon color=\\\"warning\\\" name=\\\"calendar-outline\\\" slot=\\\"start\\\"></ion-icon>\\n\\t\\t\\tAir Date: {{ episode.air_date }}\\n\\t\\t</ion-item>\\n\\n\\t\\t<!--Episode's Season #-->\\n\\t\\t<ion-item class=\\\"movie-info\\\" lines=\\\"inset\\\">\\n\\t\\t\\t<ion-icon color=\\\"warning\\\" name=\\\"folder-outline\\\" slot=\\\"start\\\"></ion-icon>\\n\\t\\t\\tSeason: {{ episode.season }}\\n\\t\\t</ion-item>\\n\\n\\t\\t<!--Episode's Episode #-->\\n\\t\\t<ion-item class=\\\"movie-info\\\" lines=\\\"inset\\\">\\n\\t\\t\\t<ion-icon color=\\\"warning\\\" name=\\\"document-outline\\\" slot=\\\"start\\\"></ion-icon>\\n\\t\\t\\tEpisode: {{ episode.episode }}\\n\\t\\t</ion-item>\\n\\n\\t\\t<!--Episode's Series-->\\n\\t\\t<ion-item class=\\\"movie-info\\\" lines=\\\"inset\\\">\\n\\t\\t\\t<ion-icon color=\\\"warning\\\" name=\\\"tv-outline\\\" slot=\\\"start\\\"></ion-icon>\\n\\t\\t\\tSeries: {{ episode.series }}\\n\\t\\t</ion-item>\\n\\n\\t</ion-card>\\n\\n\\t<!--Card for characters-->\\n\\t<ion-card>\\n\\n        <!--Card Header-->\\n\\t\\t<ion-card-header>\\n\\t\\t\\t<ion-card-title>List of Characters</ion-card-title>\\n\\t\\t</ion-card-header>\\n\\n\\t\\t<!--Item lists all characters in episode-->\\n\\t\\t<ion-item *ngFor=\\\"let character of characters\\\">\\n\\t\\t\\t<ion-icon color=\\\"warning\\\" name=\\\"people\\\" slot=\\\"start\\\"></ion-icon>\\n\\t\\t\\t{{ character }}\\n\\t\\t</ion-item>\\n\\t</ion-card>\\n\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EpisodeDetailsPage } from './episode-details.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EpisodeDetailsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EpisodeDetailsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EpisodeDetailsPageRoutingModule } from './episode-details-routing.module';\n\nimport { EpisodeDetailsPage } from './episode-details.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    EpisodeDetailsPageRoutingModule\n  ],\n  declarations: [EpisodeDetailsPage]\n})\nexport class EpisodeDetailsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2VwaXNvZGUtZGV0YWlscy9lcGlzb2RlLWRldGFpbHMucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ApiService } from './../../services/api.service';\nimport { FavouriteService } from './../../services/favourite.service';\n\n@Component({\n    selector: 'app-episode-details',\n    templateUrl: './episode-details.page.html',\n    styleUrls: ['./episode-details.page.scss'],\n})\n\nexport class EpisodeDetailsPage implements OnInit {\n\n    // Variables declared\n    episode: any;\n    episodeId = null;\n    isFavourite = false;\n    characters = [];\n\n    constructor(private activatedRoute: ActivatedRoute, private api: ApiService, private favouriteService: FavouriteService) { }\n\n    // Initialisation\n    ngOnInit() {\n        this.episodeId = this.activatedRoute.snapshot.paramMap.get('id');\n        this.api.getEpisode(this.episodeId).subscribe(res => {\n            this.episode = res[0];\n            console.log(JSON.stringify(this.episode.episode_id));\n\n            // Lists all characters, each in a separate line\n            this.characters = res[0].characters;\n            console.log(\"character:\", this.characters);\n        })\n\n        // Function to check whether episode is marked as favourite\n        this.favouriteService.isFavourite(this.episodeId).then(isFav => {\n            this.isFavourite = isFav;\n        })\n    }\n\n    // Function to favourite episodes\n    favouriteEpisode() {\n        this.favouriteService.favouriteEpisode(this.episodeId).then(() => {\n            this.isFavourite = true;\n        });\n    }\n\n    // Function to unfavourite episodes\n    unfavouriteEpisode() {\n        this.favouriteService.unfavouriteEpisode(this.episodeId).then(() => {\n            this.isFavourite = false;\n        });\n    }\n}\n"],"sourceRoot":"webpack:///"}