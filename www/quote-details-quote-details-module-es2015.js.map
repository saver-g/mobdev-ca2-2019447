{"version":3,"sources":["./src/app/pages/quote-details/quote-details.page.html","./src/app/pages/quote-details/quote-details-routing.module.ts","./src/app/pages/quote-details/quote-details.module.ts","./src/app/pages/quote-details/quote-details.page.scss","./src/app/pages/quote-details/quote-details.page.ts"],"names":[],"mappings":"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","file":"quote-details-quote-details-module-es2015.js","sourcesContent":["export default \"<!--Page Header-->\\n<ion-header>\\n\\t<ion-toolbar color=\\\"primary\\\">\\n\\n\\t\\t<!--Back-Navigation-->\\n\\t\\t<ion-buttons slot=\\\"start\\\">\\n\\t\\t\\t<ion-back-button defaulthref=\\\"/tabs/quotes\\\"></ion-back-button>\\n\\t\\t</ion-buttons>\\n\\n        <!--Generating quote's author as title-->\\n\\t\\t<ion-title>{{ quote?.author }}</ion-title>\\n\\n        <!--Favourite Quote-->\\n\\t\\t<ion-buttons slot=\\\"end\\\">\\n\\n            <!--Function to unfavourite quote if it is favourite and button is clicked-->\\n\\t\\t\\t<ion-button (click)=\\\"unfavouriteQuote()\\\" *ngIf=\\\"isFavourited\\\">\\n\\t\\t\\t\\t<ion-icon color=\\\"warning\\\" name=\\\"star\\\" slot=\\\"icon-only\\\"></ion-icon>\\n\\t\\t\\t</ion-button>\\n\\n            <!--Function to favourite quote if it is unfavourited and button is clicked-->\\n\\t\\t\\t<ion-button (click)=\\\"favouriteQuote()\\\" *ngIf=\\\"!isFavourited\\\">\\n\\t\\t\\t\\t<ion-icon color=\\\"warning\\\" name=\\\"star-outline\\\" slot=\\\"icon-only\\\"></ion-icon>\\n\\t\\t\\t</ion-button>\\n\\n\\t\\t</ion-buttons>\\n\\t</ion-toolbar>\\n</ion-header>\\n\\n<!--Page Content-->\\n<ion-content>\\n\\t<ion-content>\\n\\t\\t<ion-card *ngIf=\\\"quote\\\">\\n\\n            <!--Quotes's ID-->\\n\\t\\t\\t<ion-item class=\\\"movie-info\\\" lines=\\\"none\\\">\\n\\t\\t\\t\\t<ion-icon color=\\\"warning\\\" name=\\\"finger-print-outline\\\" slot=\\\"start\\\"></ion-icon>\\n\\t\\t\\t\\tID: {{ quote.quote_id }}\\n\\t\\t\\t</ion-item>\\n\\n            <!--Quotes's Author-->\\n\\t\\t\\t<ion-item class=\\\"movie-info\\\" lines=\\\"none\\\">\\n\\t\\t\\t\\t<ion-icon color=\\\"warning\\\" name=\\\"person-outline\\\" slot=\\\"start\\\"></ion-icon>\\n\\t\\t\\t\\tAuthor: {{ quote.author }}\\n\\t\\t\\t</ion-item>\\n\\n            <!--Quotes's Series-->\\n\\t\\t\\t<ion-item class=\\\"movie-info\\\" lines=\\\"none\\\">\\n\\t\\t\\t\\t<ion-icon color=\\\"warning\\\" name=\\\"tv-outline\\\" slot=\\\"start\\\"></ion-icon>\\n\\t\\t\\t\\tSeries: {{ quote.series }}\\n\\t\\t\\t</ion-item>\\n\\n\\t\\t</ion-card>\\n\\t</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { QuoteDetailsPage } from './quote-details.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: QuoteDetailsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class QuoteDetailsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { QuoteDetailsPageRoutingModule } from './quote-details-routing.module';\n\nimport { QuoteDetailsPage } from './quote-details.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    QuoteDetailsPageRoutingModule\n  ],\n  declarations: [QuoteDetailsPage]\n})\nexport class QuoteDetailsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3F1b3RlLWRldGFpbHMvcXVvdGUtZGV0YWlscy5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ApiService } from './../../services/api.service';\nimport { FavouriteService } from './../../services/favourite.service';\n\n@Component({\n    selector: 'app-quote-details',\n    templateUrl: './quote-details.page.html',\n    styleUrls: ['./quote-details.page.scss'],\n})\n\nexport class QuoteDetailsPage implements OnInit {\n\n    // Variables declared\n    quote: any;\n    quoteId = null;\n    isFavourited = false;\n\n    constructor(private activatedRoute: ActivatedRoute, private api: ApiService, private favouriteService: FavouriteService) { }\n\n    // Initialisation\n    ngOnInit() {\n        this.quoteId = this.activatedRoute.snapshot.paramMap.get('id');\n        this.api.getQuote(this.quoteId).subscribe(res => {\n            this.quote = res[0];\n            console.log(JSON.stringify(this.quote.quoteId));\n        });\n\n        // Function to check whether quote is marked as favourite\n        this.favouriteService.isFavourited(this.quoteId).then(isFav => {\n            this.isFavourited = isFav;\n        });\n    }\n\n    // Function to favourite quotes\n    favouriteQuote() {\n        this.favouriteService.favouriteQuote(this.quoteId).then(() => {\n            this.isFavourited = true;\n        });\n    }\n\n    // Function to unfavourite quotes\n    unfavouriteQuote() {\n        this.favouriteService.unfavouriteQuote(this.quoteId).then(() => {\n            this.isFavourited = false;\n        });\n    }\n}\n"],"sourceRoot":"webpack:///"}